export interface ScrollControlsProps {
    /**
     * The scroll size.
     *
     * @type {number}
     * @default 4
     * @memberof ScrollControlsProps
     */
    pages?: number;
    /**
     * The distance to move the camera.
     *
     * @type {number}
     * @default 4
     * @memberof ScrollControlsProps
     */
    distance?: number;
    /**
     * The smooth factor of the scrolling.
     *
     * @type {number}
     * @default 0.5
     * @memberof ScrollControlsProps
     */
    smoothScroll?: number;
    /**
     * Whether the scroll is horizontal or vertical.
     *
     * @type {boolean}
     * @default false
     * @memberof ScrollControlsProps
     */
    horizontal?: boolean;
    /**
     * Whether to use the HTML scroll.
     *
     * @type {boolean}
     * @default false
     * @memberof ScrollControlsProps
     */
    htmlScroll?: boolean;
}
declare function __VLS_template(): {
    default?(_: {}): any;
};
declare const __VLS_component: import('vue').DefineComponent<{
    pages?: number;
    distance?: number;
    smoothScroll?: number;
    horizontal?: boolean;
    htmlScroll?: boolean;
}, {
    instance: import('vue').ShallowRef<any>;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    "update:modelValue": (...args: any[]) => void;
}, string, import('vue').PublicProps, Readonly<{
    pages?: number;
    distance?: number;
    smoothScroll?: number;
    horizontal?: boolean;
    htmlScroll?: boolean;
}> & Readonly<{
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}>, {
    distance: number;
    pages: number;
    smoothScroll: number;
    horizontal: boolean;
    htmlScroll: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
